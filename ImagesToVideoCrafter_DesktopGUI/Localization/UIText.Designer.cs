//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImagesToVideoCrafter_DesktopGUI.Localization {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class UIText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UIText() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ImagesToVideoCrafter_DesktopGUI.Localization.UIText", typeof(UIText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Определяет, следует ли добавить к имени файла информацию о параметрах видео.
        /// </summary>
        public static string options_craft_AddVideoInfoToFilename_description {
            get {
                return ResourceManager.GetString("options craft AddVideoInfoToFilename description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AddVideoInfoToFilename.
        /// </summary>
        public static string options_craft_AddVideoInfoToFilename_name {
            get {
                return ResourceManager.GetString("options craft AddVideoInfoToFilename name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Кодек. Рекоммендуется H264. Поддерживаются, но не тестировались: H265, MPEG4.
        /// </summary>
        public static string options_craft_Codec_description {
            get {
                return ResourceManager.GetString("options craft Codec description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Codec.
        /// </summary>
        public static string options_craft_Codec_name {
            get {
                return ResourceManager.GetString("options craft Codec name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Constant Rate Factor. Имеет значение для только для кодеков x264 и x265.
        /// </summary>
        public static string options_craft_CRF_description {
            get {
                return ResourceManager.GetString("options craft CRF description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CRF.
        /// </summary>
        public static string options_craft_CRF_name {
            get {
                return ResourceManager.GetString("options craft CRF name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Определяет, использовать ли режим отладки (выводить ли отладочные сообщения и т.п.).
        /// </summary>
        public static string options_craft_DebugMode_description {
            get {
                return ResourceManager.GetString("options craft DebugMode description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DebugMode.
        /// </summary>
        public static string options_craft_DebugMode_name {
            get {
                return ResourceManager.GetString("options craft DebugMode name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Режим кодирования. Для кодеков x264 и x265. Влияет на скорость создания видео, немного на его размер и самую малость на качество.
        /// </summary>
        public static string options_craft_EncoderPresetSpeed_description {
            get {
                return ResourceManager.GetString("options craft EncoderPresetSpeed description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EncoderPresetSpeed.
        /// </summary>
        public static string options_craft_EncoderPresetSpeed_name {
            get {
                return ResourceManager.GetString("options craft EncoderPresetSpeed name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Директория, в которой находятся ffmpeg shared .dll файлы: avcodec, avformat, avutil, swresample, swscale.
        /// </summary>
        public static string options_craft_FFmpegBinaresDirectory_description {
            get {
                return ResourceManager.GetString("options craft FFmpegBinaresDirectory description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FFmpegBinaresDirectory.
        /// </summary>
        public static string options_craft_FFmpegBinaresDirectory_name {
            get {
                return ResourceManager.GetString("options craft FFmpegBinaresDirectory name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Длительность одного кадра в миллисекундах.
        /// </summary>
        public static string options_craft_FrameMilliseconds_description {
            get {
                return ResourceManager.GetString("options craft FrameMilliseconds description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FrameMilliseconds.
        /// </summary>
        public static string options_craft_FrameMilliseconds_name {
            get {
                return ResourceManager.GetString("options craft FrameMilliseconds name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Частота кадров. Не используется, если не установить UseFramerate true.
        /// </summary>
        public static string options_craft_Framerate_description {
            get {
                return ResourceManager.GetString("options craft Framerate description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Framerate.
        /// </summary>
        public static string options_craft_Framerate_name {
            get {
                return ResourceManager.GetString("options craft Framerate name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Высота видео.
        /// </summary>
        public static string options_craft_Height_description {
            get {
                return ResourceManager.GetString("options craft Height description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Height.
        /// </summary>
        public static string options_craft_Height_name {
            get {
                return ResourceManager.GetString("options craft Height name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Директория, откуда будут взяты кадры для видео.
        /// </summary>
        public static string options_craft_InputDirectory_description {
            get {
                return ResourceManager.GetString("options craft InputDirectory description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на InputDirectory.
        /// </summary>
        public static string options_craft_InputDirectory_name {
            get {
                return ResourceManager.GetString("options craft InputDirectory name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Минимальное значение средней светлоты в кадре для его валидации.
        /// </summary>
        public static string options_craft_LightnessThreshold_description {
            get {
                return ResourceManager.GetString("options craft LightnessThreshold description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LightnessThreshold.
        /// </summary>
        public static string options_craft_LightnessThreshold_name {
            get {
                return ResourceManager.GetString("options craft LightnessThreshold name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Директория, куда будет помещён создаваемый видео файл.
        /// </summary>
        public static string options_craft_OutputDirectory_description {
            get {
                return ResourceManager.GetString("options craft OutputDirectory description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OutputDirectory.
        /// </summary>
        public static string options_craft_OutputDirectory_name {
            get {
                return ResourceManager.GetString("options craft OutputDirectory name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имя создаваемого видео файла без расширения файла.
        /// </summary>
        public static string options_craft_OutputVideoName_description {
            get {
                return ResourceManager.GetString("options craft OutputVideoName description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OutputVideoName.
        /// </summary>
        public static string options_craft_OutputVideoName_name {
            get {
                return ResourceManager.GetString("options craft OutputVideoName name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Определяет, следует ли инверсировать порядок кадров.
        /// </summary>
        public static string options_craft_ReverseInputFilesOrder_description {
            get {
                return ResourceManager.GetString("options craft ReverseInputFilesOrder description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ReverseInputFilesOrder.
        /// </summary>
        public static string options_craft_ReverseInputFilesOrder_name {
            get {
                return ResourceManager.GetString("options craft ReverseInputFilesOrder name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Определяет, нужно ли игнорировать значение FrameMilliseconds и использовать только Framerate.
        /// </summary>
        public static string options_craft_UseFramerate_description {
            get {
                return ResourceManager.GetString("options craft UseFramerate description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UseFramerate.
        /// </summary>
        public static string options_craft_UseFramerate_name {
            get {
                return ResourceManager.GetString("options craft UseFramerate name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ширина видео.
        /// </summary>
        public static string options_craft_Width_description {
            get {
                return ResourceManager.GetString("options craft Width description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Width.
        /// </summary>
        public static string options_craft_Width_name {
            get {
                return ResourceManager.GetString("options craft Width name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на *Все пути можно указывать в форматах: C:\example\example , C:\\example\\example , &quot;C:\example with spaces\example&quot; , subfolder , subfolder\example , subfolder\\example , &quot;subfolder with spaces&quot; , ну вы поняли....
        /// </summary>
        public static string u_comment_for_paths_options {
            get {
                return ResourceManager.GetString("u comment for paths options", resourceCulture);
            }
        }
    }
}
